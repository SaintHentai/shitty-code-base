package com.company;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

public class GeneratorGLN extends javax.swing.JFrame implements WindowListener { //господи я такой говнокодер

    protected String cmdRestart = "100"; // защита от дурака -> 95 строка
    protected boolean closeApp = false;  // юзер не сможет в ручную перезапустить программу, так как ограниченния ввода в два числа

    /**
     * Creates new form GeneratorGLN
     */
    public GeneratorGLN() { //здесь я ввожу изменения в своей программе, так что не удивляйтесь что тут дохера всего...
        initComponents();
        this.setTitle("Генератор штрих-кодов");
        this.setIconImage(new ImageIcon(System.getProperty("user.dir")+"\\st.jpg").getImage());
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.addWindowListener(this);
        Thread t = new WatchMemory();
        t.start();
        outGLN.setText(" Инфо : \n"
                +"1. Максимальная число штрих-кодов 20 штук.\n"
                +"2. Программа делает перезагрузку, если работает долго.\n"
                +"3. Введите 0 или 00 и для отчистки поля вывода.\n"
                +"4. Введите любое положительное число от 1 до 20,\n"
                +"    создадите нужное количетсво штрих-кодов.\n");
    }


    class WatchMemory extends Thread{ //Логика перезагрузки
        int globalTime;
        int cutTime;
        int end;
        public void run(){
            end = 0;
            globalTime = 600;
            cutTime = 1;
            do {
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                Runtime.getRuntime().gc();
                globalTime = globalTime - cutTime;
                if (globalTime == end || closeApp){
                    outGLN.removeAll();
                    int time = 10;
                    while(time --> end){
                        outGLN.setText("Перезагрузка программы через: " + time + " секунд." + "\n");
                        try{
                            TimeUnit.SECONDS.sleep(1);
                        }catch(InterruptedException e){}
                    }
                    //close the frame
                    GeneratorGLN.this.processWindowEvent(
                            new WindowEvent(
                                    GeneratorGLN.this, WindowEvent.WINDOW_CLOSED));
                }
            }while (globalTime != end);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        getGLN = new javax.swing.JTextField();
        generateGLN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outGLN = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        getGLN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getGLN.setToolTipText("Введите количество штрих-кодов.");
        getGLN.setDocument(new JTextFieldLimit(2)); //n-ое значность ввода чисел (1->9) (2->99) (3->999) ect...
        getGLN.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if ((c < '0') && (c !=KeyEvent.VK_BACK_SPACE) || (!Character.isDigit(c))){
                    e.consume();
                }
            }
        });

        generateGLN.setText("Создать штрих-код");
        generateGLN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGLNActionPerformed(evt);
            }
        });

        jLabel1.setText("Поле для ввода");

        jLabel2.setText("Поле для вывода");

        outGLN.setColumns(20);
        outGLN.setRows(5);
        outGLN.setEditable(false);
        outGLN.setToolTipText("Здесь вы можите копировать созданные штрих-кода.");
        jScrollPane1.setViewportView(outGLN);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(getGLN)
                        .addComponent(generateGLN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(getGLN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(generateGLN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void generateGLNActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        outGLN.removeAll();
        try {
            if (getGLN.getText().intern() == cmdRestart){
                closeApp = true;
            }else{
                int len = Integer.parseInt(getGLN.getText());
                String wall = "90109";
                if (len == 0){
                    outGLN.setText("Clear...");
                }
                else if (len < 21) {
                    LogicGLN log = new LogicGLN(len, wall);
                    String gln = log.getArrStr();
                    String theEndResult = "";
                    String[] lineGln = gln.split(wall);
                    for (String ect : lineGln) {
                        theEndResult = theEndResult + ect +"\n";
                    }
                    outGLN.setText(theEndResult);
                } else {
                    outGLN.setText("The maximum number of generations is 20 barcodes.\n"
                            +"Максимальное количество 20 штрих кодов.\n"
                            +"Максимальна кількість генерацій 20 штрих кодів.\n");
                }
            }
        } catch (NumberFormatException e){
            outGLN.setText("Please enter the number of barcodes.\n"
                    +"Пожалуйста введите количество штрих кодов.\n"
                    +"Будь ласка введіть кількість штрих кодів.\n");
        }
    }

    @Override
    public void windowOpened(WindowEvent windowEvent) {

    }

    @Override
    public void windowClosing(WindowEvent windowEvent) {

    }

    @Override
    public void windowClosed(WindowEvent windowEvent) { //перезагрузка программы, перепишите если заните как улучшить.
        File openFile = new File(System.getProperty("user.dir")+"\\restart.bat");
        try {
            Desktop.getDesktop().open(openFile);
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.exit(0);
    }

    @Override
    public void windowIconified(WindowEvent windowEvent) {

    }

    @Override
    public void windowDeiconified(WindowEvent windowEvent) {

    }

    @Override
    public void windowActivated(WindowEvent windowEvent) {

    }

    @Override
    public void windowDeactivated(WindowEvent windowEvent) {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneratorGLN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneratorGLN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneratorGLN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneratorGLN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneratorGLN();
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton generateGLN;
    private javax.swing.JTextField getGLN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outGLN;

    // End of variables declaration
}
